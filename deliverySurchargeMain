<!-- === Hoop Austin • Delivery Distance & Surcharge (with Service Area check + modal) === -->

<style>
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');
:root{ --bg:#fff; --panel:#f9fafb; --soft:#fff; --border:#e5e7eb;
  --muted:#6b7280; --text:#111827; --brand:#2563eb; --chip:#f3f4f6; --ok:#16a34a; --warn:#d97706; --danger:#dc2626; }
*{ box-sizing:border-box }
body{ font-family:'Inter',system-ui,sans-serif }
.cards{ padding:12px clamp(16px,4vw,28px); display:grid; gap:12px; grid-template-columns:repeat(12,1fr) }
.card{ background:var(--panel); border:1px solid var(--border); border-radius:12px; padding:14px; display:grid; gap:12px }

/* Top card */
.top-card h1{ margin:0; font-size:20px; text-align:center; font-weight:700; color:var(--text) }
.row{ display:flex; gap:10px; align-items:center; flex-wrap:wrap; justify-content:center }
.chip{ display:inline-flex; align-items:center; gap:8px; padding:6px 10px; background:var(--chip); border:1px solid var(--border); border-radius:999px; font-size:12px; color:var(--muted) }
.chip b{ color:var(--text); font-weight:600 }
.inputWrap{ display:flex; gap:10px; flex-wrap:wrap; align-items:center; background:var(--soft); border:1px solid var(--border); border-radius:12px; padding:6px }
.inputWrap input[type="text"]{ flex:1 1 420px; min-width:240px; background:transparent; border:0; outline:none; color:var(--text); font-size:15px; padding:10px 12px }
.btn{ padding:10px 14px; border:0; border-radius:10px; cursor:pointer; background:var(--brand); color:#fff; font-weight:600; font-size:14px }
.btn:disabled{ background:#93c5fd; cursor:not-allowed }
.status{ font-size:13px; color:var(--muted); text-align:center }

/* Bottom cards */
.card h3{ margin:0 0 6px 0; font-size:13px; color:var(--muted); font-weight:600; text-transform:uppercase; letter-spacing:.3px }
.kv{ display:flex; justify-content:space-between; align-items:center; border:1px dashed var(--border); border-radius:8px; padding:8px 10px }
.k{ color:var(--muted); font-size:13px } .v{ font-weight:600; font-size:13px } .total{ font-size:18px }
.ok,.warn{ font-size:13px; text-align:center } .ok{ color:var(--ok) } .warn{ color:var(--warn) }
.actions{ display:flex; gap:10px; align-items:center; justify-content:center; flex-wrap:wrap }
.pay{
  display:inline-flex; padding:10px 14px; border:0; border-radius:10px; color:#fff; background:#10b981;
  font-weight:700; font-size:14px; box-shadow:0 5px 12px rgba(16,185,129,.25); cursor:pointer
}
.pay:disabled{ background:#86efac; cursor:not-allowed; opacity:.7 }

.col-12{ grid-column:span 12 } .col-6{ grid-column:span 6 }
@media (max-width:900px){ .col-6{ grid-column:span 12 } }

/* Route card spacing */
.map-card{ gap:6px } .map-card h3{ margin-bottom:4px }
#map{ width:100%; min-height:320px; border:1px solid var(--border); border-radius:12px }

/* Modal */
.modal{
  position:fixed; inset:0; display:none; place-items:center; background:rgba(17,24,39,.45);
  z-index:9999; padding:16px;
}
.modal.open{ display:grid }
.modal__card{
  background:#fff; color:#111827; border-radius:14px; border:1px solid var(--border);
  max-width:560px; width:100%; padding:18px; box-shadow:0 10px 30px rgba(0,0,0,.18)
}
.modal__title{ margin:0 0 8px 0; font-size:18px; font-weight:800 }
.modal__body{ font-size:14px; color:#374151; margin-bottom:14px }
.modal__note{ font-size:12px; color:#6b7280; margin-top:6px }
.modal__actions{ display:flex; gap:10px; flex-wrap:wrap; justify-content:flex-end }
.btn-outline{ background:#fff; color:#111827; border:1px solid var(--border); padding:8px 12px; border-radius:10px; cursor:pointer }
.btn-danger{ background:var(--danger); color:#fff; border:0; padding:8px 12px; border-radius:10px; cursor:pointer }

/* Mobile: single-line input + centered button */
@media (max-width:600px){
  .inputWrap{ flex-direction:column; align-items:center }
  .inputWrap input[type="text"]{
    width:100%; height:44px; min-height:44px!important; max-height:44px;
    line-height:44px; padding:0 12px; font-size:16px; white-space:nowrap; overflow:hidden; text-overflow:ellipsis;
    -webkit-appearance:none; appearance:none;
  }
  .inputWrap .btn{ align-self:center }
}
</style>

<div class="cards">
  <div class="card col-12 top-card">
    <h1>Hoop Austin — Delivery Calculator</h1>
    <div class="inputWrap">
      <input id="address" type="text" placeholder="Enter event address (e.g., 1100 Congress Ave, Austin, TX)" />
      <button id="calcBtn" class="btn">Calculate & Preview Route</button>
    </div>
    <div class="row">
      <span class="chip">Origin <b>Hoop Austin -South Facility</b></span>
      <span class="chip">Free radius <b>30 miles (one-way)</b></span>
      <span class="chip">Rate <b>$2/mi (roundtrip)</b></span>
      <span class="chip" id="serviceChip">Service area <b>80 miles (one-way)</b></span>
    </div>
    <div id="status" class="status"></div>
  </div>

  <div class="card col-6">
    <h3>Delivery Summary</h3>
    <div class="kv"><span class="k">Driving distance (one-way)</span><span class="v" id="distance">—</span></div>
    <div class="kv"><span class="k">Billable miles (beyond 30)</span><span class="v" id="billable">—</span></div>
    <div class="kv"><span class="k">Roundtrip miles billed</span><span class="v" id="roundtrip">—</span></div>
    <div class="kv"><span class="k total">Surcharge</span><span class="v total" id="surcharge">—</span></div>

    <div class="actions">
      <button id="payBtn" class="pay" type="button" disabled>Pay</button>
    </div>

    <div id="freeNote"  class="ok"   style="display:none;">Within 30 miles. No surcharge.</div>
    <div id="applyNote" class="warn" style="display:none;">Surcharge applies—use the Pay button to complete payment.</div>

    <input type="hidden" id="delivery_surcharge" name="delivery_surcharge" value="0.00" />
  </div>

  <div class="card col-6 map-card">
    <h3>Route Preview</h3>
    <div id="map"></div>
  </div>
</div>

<!-- Service area modal -->
<div class="modal" id="serviceModal" role="dialog" aria-modal="true" aria-labelledby="servTitle">
  <div class="modal__card">
    <h2 class="modal__title" id="servTitle">Outside our service area</h2>
    <div class="modal__body" id="servBody">
      We’re sorry—this address is currently outside our delivery radius.
      Please <a id="contactLinkInline" href="#" target="_top" style="color:#2563eb;text-decoration:underline;">contact us</a>
      and we’ll see if we can make alternative arrangements to get a trailer to you.
      <div class="modal__note" id="servMilesNote"></div>
    </div>
    <div class="modal__actions">
      <button type="button" class="btn-outline" id="servClose">Close</button>
      <button type="button" class="btn-danger" id="servContact">Contact us</button>
    </div>
  </div>
</div>

<script>
  // ---- Config ----
  const ORIGIN_LABEL       = "Hoop Austin -South Facility";
  const ORIGIN_ADDRESS     = "8008 S Congress Ave, Austin, TX 78745";
  const FREE_RADIUS_MI     = 30;
  const RATE_PER_MI        = 2.00;

  // NEW: service area (one-way driving miles). Update as needed.
  const SERVICE_AREA_MAX_MI = 80;
  const CONTACT_US_URL      = "https://www.hoop-austin.com/book";

  // Values passed to parent for Stripe
  const STRIPE_CENTS_PRICE_ID = "price_1S3fDECklDmvC0Bf3vBuUvLw";
  const STRIPE_SUCCESS_URL    = "https://www.hoop-austin.com/stripe-success";
  const STRIPE_CANCEL_URL     = "https://www.hoop-austin.com/stripe-cancel";

  // ---- Globals ----
  let map, directionsService, directionsRenderer, geocoder, placesAutocomplete;

  // ---- Utils ----
  const metersToMiles = m => m / 1609.344;
  const money = n => n.toLocaleString(undefined, { style:"currency", currency:"USD" });
  const txt   = (id, t) => document.getElementById(id).textContent = t;
  const statusMsg = (m, isErr=false) => { const el = document.getElementById("status"); el.textContent = m||""; el.style.color = isErr ? "#dc2626" : "#6b7280"; };
  const show  = (id, v) => document.getElementById(id).style.display = v ? "" : "none";
  const inIframe = () => { try { return window.self !== window.top; } catch { return true; } };

  function computeSurcharge(oneWayMiles){
    const billableOneWay    = Math.max(0, oneWayMiles - FREE_RADIUS_MI);
    const roundtripBillable = billableOneWay * 2;
    const surcharge         = roundtripBillable * RATE_PER_MI; // exact cents
    return { billableOneWay, roundtripBillable, surcharge };
  }

  // ---- Modal helpers ----
  function openServiceModal(miles){
    const modal = document.getElementById("serviceModal");
    const note  = document.getElementById("servMilesNote");
    const linkInline = document.getElementById("contactLinkInline");
    note.textContent = `Entered address is approximately ${miles.toFixed(1)} miles (one-way) from our facility.`;
    linkInline.href = CONTACT_US_URL;

    modal.classList.add("open");
    // Wire buttons
    const closeBtn   = document.getElementById("servClose");
    const contactBtn = document.getElementById("servContact");
    contactBtn.onclick = () => { window.top.location.href = CONTACT_US_URL; };
    closeBtn.onclick   = () => { modal.classList.remove("open"); };
    // Escape to close
    function onEsc(e){ if (e.key === "Escape") { modal.classList.remove("open"); document.removeEventListener("keydown", onEsc); } }
    document.addEventListener("keydown", onEsc);
  }

  function clearSummaryAndDisablePay(){
    txt("billable", "—");
    txt("roundtrip", "—");
    txt("surcharge", "—");
    document.getElementById("delivery_surcharge").value = "0.00";
    show("freeNote", false); show("applyNote", false);
    document.getElementById("payBtn").disabled = true;
  }

  function wirePay(){
    const payBtn = document.getElementById("payBtn");
    payBtn.addEventListener("click", () => {
      if (payBtn.disabled) return;
      const surcharge = Number(document.getElementById("delivery_surcharge").value || "0");
      const cents = Math.round(surcharge * 100);
      const payload = {
        type: "HOOP_SURCHARGE_CHECKOUT",
        price: "price_1S3fDECklDmvC0Bf3vBuUvLw",
        quantity: Math.max(1, cents),
        address: document.getElementById("address").value || "",
        successUrl: "https://www.hoop-austin.com/stripe-success",
        cancelUrl:  "https://www.hoop-austin.com/stripe-cancel"
      };
      if (inIframe()) {
        window.parent.postMessage(payload, "*");
        statusMsg("Opening secure payment…");
      }
    });
  }

  // ---- Google Maps ----
  function initMap() {
    // Update chip text with configured radius
    const chip = document.getElementById("serviceChip");
    if (chip) chip.innerHTML = `Service area <b>${SERVICE_AREA_MAX_MI} miles (one-way)</b>`;

    map = new google.maps.Map(document.getElementById("map"), {
      center: { lat: 30.23, lng: -97.76 }, zoom: 11, mapTypeControl:false, streetViewControl:false, fullscreenControl:true
    });

    geocoder = new google.maps.Geocoder();
    directionsService = new google.maps.DirectionsService();
    directionsRenderer = new google.maps.DirectionsRenderer({ map });

    // Origin pin
    geocoder.geocode({ address: ORIGIN_ADDRESS }, (results, status) => {
      if (status === "OK" && results?.[0]) {
        new google.maps.Marker({ position: results[0].geometry.location, map, title: ORIGIN_LABEL, label: "O" });
        map.setCenter(results[0].geometry.location);
      }
    });

    const input = document.getElementById("address");
    placesAutocomplete = new google.maps.places.Autocomplete(input, {
      fields: ["formatted_address", "geometry"],
     // bounds: new google.maps.LatLngBounds({ lat: 29.5, lng: -98.5 }, { lat: 30.9, lng: -97.0 }),
      strictBounds: false
    });

    document.getElementById("calcBtn").addEventListener("click", handleCalculate);
    input.addEventListener("keydown", (e) => { if (e.key === "Enter") { e.preventDefault(); handleCalculate(); } });
    wirePay();
  }

  function handleCalculate() {
    const dest = document.getElementById("address").value.trim();
    const payBtn = document.getElementById("payBtn");

    if (!dest) { statusMsg("Please enter an event address.", true); payBtn.disabled = true; return; }

    statusMsg("Calculating route and surcharge…");
    document.getElementById("calcBtn").disabled = true;

    directionsService.route({
      origin: ORIGIN_ADDRESS,
      destination: dest,
      travelMode: google.maps.TravelMode.DRIVING,
    }, (response, status) => {
      document.getElementById("calcBtn").disabled = false;

      if (status !== "OK" || !response?.routes?.length) {
        statusMsg("No route found. Try again.", true);
        show("freeNote", false); show("applyNote", false);
        payBtn.disabled = true;
        return;
      }

      directionsRenderer.setDirections(response);
      if (response.routes[0].bounds) map.fitBounds(response.routes[0].bounds);

      const leg    = response.routes[0].legs[0];
      const meters = leg.distance?.value ?? 0;
      const miles  = metersToMiles(meters);

      // --- Service area enforcement ---
      if (miles > SERVICE_AREA_MAX_MI) {
        // Show the modal and reset summary/pay
        txt("distance", `${miles.toFixed(1)} mi`);
        openServiceModal(miles);
        clearSummaryAndDisablePay();
        statusMsg("Outside service area.", true);
        return;
      }

      // --- Within service area: compute surcharge as before ---
      const { billableOneWay, roundtripBillable, surcharge } = computeSurcharge(miles);

      txt("distance",  miles ? `${miles.toFixed(1)} mi` : "n/a");
      txt("billable",  `${billableOneWay.toFixed(1)} mi`);
      txt("roundtrip", `${roundtripBillable.toFixed(1)} mi`);
      txt("surcharge", money(surcharge));
      document.getElementById("delivery_surcharge").value = surcharge.toFixed(2);

      const hasSurcharge = surcharge > 0.0001;
      show("freeNote", !hasSurcharge);
      show("applyNote", hasSurcharge);
      payBtn.disabled = !hasSurcharge;

      statusMsg("");
    });
  }

  window.initMap = initMap;
</script>

<!-- Google Maps -->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAaaw90ZMtQFt6PPzl95laRKxoMqwo-5wQ&callback=initMap&libraries=places&v=weekly" async defer></script>
